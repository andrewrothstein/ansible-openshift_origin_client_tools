---
- include_role:
    name: andrewrothstein.unarchivedeps
- include_Role:
    name: andrwerothstein.alpineglibc

- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'

- name: check for {{ oc_install_exe }}
  become: '{{ oc_privilege_escalation }}'
  become_user: root
  stat:
    path: '{{ oc_install_exe }}'
  changed_when: false
  register: oc_binary_present

- when: not oc_binary_present.stat.exists
  block:
    - name: download...
      become: '{{ oc_privilege_escalation }}'
      become_user: root
      get_url:
        url: '{{ oc_url }}'
        dest: '{{ oc_tmp_filename }}'
        mode: 0644
        checksum: '{{ oc_checksum }}'
        timeout: '{{ oc_download_timeout }}'

    - name: create directory for unarchive if required...
      become: '{{ oc_privilege_escalation }}'
      become_user: root
      file:
        path: '{{ oc_unarchive_dir }}'
        state: directory
        mode: 0755

    - name: unarchive {{ oc_tmp_filename }} into {{ oc_unarchive_dir }}
      become: '{{ oc_privilege_escalation }}'
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ oc_tmp_filename }}'
        dest: '{{ oc_unarchive_dir }}'
        creates: '{{ oc_install_dir }}/oc'
  always:
    - name: cleanup
      become: true
      become_user: root
      file:
        path: '{{ oc_tmp_filename }}'
        state: absent

- name: link
  become: '{{ oc_privilege_escalation }}'
  become_user: root
  with_items:
    - oc
  file:
    src: '{{ oc_install_dir }}/{{ item }}'
    dest: '{{ oc_parent_install_dir }}/bin/{{ item }}'
    state: link
